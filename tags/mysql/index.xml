<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>mysql on 个人笔记</title>
    <link>http://zhaoguibin.me/tags/mysql/</link>
    <description>Recent content in mysql on 个人笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 19 Jan 2020 16:23:54 +0000</lastBuildDate>
    <atom:link href="http://zhaoguibin.me/tags/mysql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>php使用Linux命令导出MySQL数据到csv</title>
      <link>http://zhaoguibin.me/posts/php%E4%BD%BF%E7%94%A8linux%E5%91%BD%E4%BB%A4%E5%AF%BC%E5%87%BAmysql%E6%95%B0%E6%8D%AE%E5%88%B0csv/</link>
      <pubDate>Sun, 19 Jan 2020 16:23:54 +0000</pubDate>
      <guid>http://zhaoguibin.me/posts/php%E4%BD%BF%E7%94%A8linux%E5%91%BD%E4%BB%A4%E5%AF%BC%E5%87%BAmysql%E6%95%B0%E6%8D%AE%E5%88%B0csv/</guid>
      <description>PS :使用这个导出功能需要的条件： 1&amp;ndash;服务器需要安装mysql客户端：yum install mysql 2&amp;ndash;php需要开启exec函数(disable_functions exec)
/** * @FILE_NAME:ExcelExport.php * @Description 数据导出excel,从数据库导出再下载，数据库配置 * [mysqld] * secure_file_priv= &amp;#39;&amp;#39; * @User ZHaoGuiBin * @Date 2019-12-04 13:52:58 */ class ExcelExport { /** * @FuncName:exportExcel * @Description * @User ZHaoGuiBin * @Date 2019-12-24 13:42:11 * @param string $title * @param $sql * @param $data * @return bool */ public static function exportExcel($title = &amp;#39;报表导出&amp;#39;, $sql, $data) { $data_dir = getcwd() . &amp;#34;/data_export/&amp;#34;; //去除sql语句里的`,要不然执行shell命令报错 $sql = str_replace(&amp;#39;`&amp;#39;, &amp;#39;&amp;#39;, $sql); $sql = str_replace(&amp;#39;&amp;#34;&amp;#39;, &amp;#34;&amp;#39;&amp;#34;, $sql); //删除历史表格 self::deleteExcel(); if (!</description>
    </item>
    <item>
      <title>MySQL_OUTFILE导出数据</title>
      <link>http://zhaoguibin.me/posts/mysql_outfile%E5%AF%BC%E5%87%BA%E6%95%B0%E6%8D%AE/</link>
      <pubDate>Sun, 19 Jan 2020 14:33:53 +0000</pubDate>
      <guid>http://zhaoguibin.me/posts/mysql_outfile%E5%AF%BC%E5%87%BA%E6%95%B0%E6%8D%AE/</guid>
      <description>PS : mysql 需要开启grant FILE on . to newerp; 权限
/** * @FILE_NAME:ExcelExport.php * @Description 数据导出excel,从数据库导出再下载，数据库配置 * [mysqld] * secure_file_priv= &amp;#39;&amp;#39; * @User ZHaoGuiBin * @Date 2019-12-04 13:52:58 */ class ExcelExport { /** * @FuncName:exportExcel * @Description * @User ZHaoGuiBin * @Date 2019-12-24 13:42:11 * @param string $title * @param $sql * @param $data * @return bool */ public static function exportExcel($title = &amp;#39;报表导出&amp;#39;, $sql, $data) { $data_dir = getcwd() .</description>
    </item>
    <item>
      <title>MySQL保留两位小数</title>
      <link>http://zhaoguibin.me/posts/mysql%E4%BF%9D%E7%95%99%E4%B8%A4%E4%BD%8D%E5%B0%8F%E6%95%B0/</link>
      <pubDate>Fri, 09 Nov 2018 19:58:17 +0000</pubDate>
      <guid>http://zhaoguibin.me/posts/mysql%E4%BF%9D%E7%95%99%E4%B8%A4%E4%BD%8D%E5%B0%8F%E6%95%B0/</guid>
      <description>round(x,d) :用于数据的四舍五入,round(x) ,其实就是round(x,0),也就是默认d为0； 这里有个值得注意的地方是，d可以是负数，这时是指定小数点左边的d位整数位为0,同时小数位均为0；
SELECT ROUND(5000.56789,2),ROUND(5000,2),ROUND(0.56789,2),ROUND(115.56789,-1); SELECT ROUND(5000.12345,2),ROUND(5000,2),ROUND(0.12345,2),ROUND(114.12345,-1); TRUNCATE(x,d)：函数返回被舍去至小数点后d位的数字x。若d的值为0，则结果不带有小数点或不带有小数部分。若d设为负数，则截去（归零）x小数点左起第d位开始后面所有低位的值。 SELECT TRUNCATE(5000.56789,2),TRUNCATE(5000,2),TRUNCATE(0.56789,2),TRUNCATE(115.56789,-1); SELECT TRUNCATE(5000.12345,2),TRUNCATE(5000,2),TRUNCATE(0.12345,2),TRUNCATE(114.12345,-1); </description>
    </item>
    <item>
      <title>SQL纵向变成横向，横向变成纵向</title>
      <link>http://zhaoguibin.me/posts/sql%E7%BA%B5%E5%90%91%E5%8F%98%E6%88%90%E6%A8%AA%E5%90%91%E6%A8%AA%E5%90%91%E5%8F%98%E6%88%90%E7%BA%B5%E5%90%91/</link>
      <pubDate>Sun, 30 Sep 2018 12:06:32 +0000</pubDate>
      <guid>http://zhaoguibin.me/posts/sql%E7%BA%B5%E5%90%91%E5%8F%98%E6%88%90%E6%A8%AA%E5%90%91%E6%A8%AA%E5%90%91%E5%8F%98%E6%88%90%E7%BA%B5%E5%90%91/</guid>
      <description>&lt;h3 id=&#34;纵向变成横向&#34;&gt;纵向变成横向&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Subject&lt;/th&gt;
&lt;th&gt;Result&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;张三&lt;/td&gt;
&lt;td&gt;语文&lt;/td&gt;
&lt;td&gt;73&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;张三&lt;/td&gt;
&lt;td&gt;数学&lt;/td&gt;
&lt;td&gt;83&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;张三&lt;/td&gt;
&lt;td&gt;物理&lt;/td&gt;
&lt;td&gt;93&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;李四&lt;/td&gt;
&lt;td&gt;语文&lt;/td&gt;
&lt;td&gt;74&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;李四&lt;/td&gt;
&lt;td&gt;数学&lt;/td&gt;
&lt;td&gt;84&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;李四&lt;/td&gt;
&lt;td&gt;物理&lt;/td&gt;
&lt;td&gt;94&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;转换成&lt;/p&gt;
&lt;p&gt;| 姓名 | 语文 | 数学 | 物理 |
| &amp;mdash;&amp;mdash; | &amp;mdash;&amp;mdash; | &amp;mdash;&amp;mdash; |
| 李四 | 74 | 84 | 94 |
| 张三 | 73 | 83 | 93 |&lt;/p&gt;
&lt;h4 id=&#34;建表插入数据&#34;&gt;建表插入数据&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-mysql&#34; data-lang=&#34;mysql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;students&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;Name&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;VARCHAR&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;Subject&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;VARCHAR&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;Result&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INT&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INTO&lt;/span&gt; students
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;VALUES&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;张三&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;语文&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;73&amp;#39;&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;张三&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;数学&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;83&amp;#39;&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;张三&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;物理&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;93&amp;#39;&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;李四&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;语文&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;74&amp;#39;&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;李四&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;数学&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;84&amp;#39;&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;李四&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;物理&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;94&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>MySQL查询字段在哪个表</title>
      <link>http://zhaoguibin.me/posts/mysql%E6%9F%A5%E8%AF%A2%E5%AD%97%E6%AE%B5%E5%9C%A8%E5%93%AA%E4%B8%AA%E8%A1%A8/</link>
      <pubDate>Sun, 30 Sep 2018 10:01:03 +0000</pubDate>
      <guid>http://zhaoguibin.me/posts/mysql%E6%9F%A5%E8%AF%A2%E5%AD%97%E6%AE%B5%E5%9C%A8%E5%93%AA%E4%B8%AA%E8%A1%A8/</guid>
      <description>查询pwd字段在哪个数据库哪个表 SELECT TABLE_SCHEMA, TABLE_NAME FROM information_schema.`COLUMNS` WHERE COLUMN_NAME = &amp;#39;pwd&amp;#39; 查询pwd字段在ERP数据库的哪个表 SELECT TABLE_SCHEMA, TABLE_NAME FROM information_schema.`COLUMNS` WHERE COLUMN_NAME = &amp;#39;pwd&amp;#39; AND TABLE_SCHEMA = &amp;#39;ERP&amp;#39; </description>
    </item>
    <item>
      <title>DDL、DML和DCL的区别与理解</title>
      <link>http://zhaoguibin.me/posts/ddldml%E5%92%8Cdcl%E7%9A%84%E5%8C%BA%E5%88%AB%E4%B8%8E%E7%90%86%E8%A7%A3/</link>
      <pubDate>Sat, 30 Jun 2018 12:53:19 +0000</pubDate>
      <guid>http://zhaoguibin.me/posts/ddldml%E5%92%8Cdcl%E7%9A%84%E5%8C%BA%E5%88%AB%E4%B8%8E%E7%90%86%E8%A7%A3/</guid>
      <description>&lt;p&gt;DML、DDL、DCL区别 .&lt;/p&gt;
&lt;p&gt;总体解释：&lt;/p&gt;
&lt;p&gt;DML(data manipulation language)：&lt;/p&gt;
&lt;p&gt;它们是SELECT、UPDATE、INSERT、DELETE，就象它的名字一样，这4条命令是用来对数据库里的数据进行操作的语言&lt;/p&gt;
&lt;p&gt;DDL(data definition language)：&lt;/p&gt;
&lt;p&gt;DDL比DML要多，主要的命令有CREATE、ALTER、DROP等，DDL主要是用在定义或改变表(TABLE)的结构，数据类型，表之间的链接和约束等初始化工作上，他们大多在建立表时使用&lt;/p&gt;
&lt;p&gt;DCL(Data Control Language)：&lt;/p&gt;
&lt;p&gt;是数据库控制功能。是用来设置或更改数据库用户或角色权限的语句，包括(grant,deny,revoke等)语句。在默认状态下，只有sysadmin,dbcreator,db_owner或db_securityadmin等人员才有权力执行DCL&lt;/p&gt;</description>
    </item>
    <item>
      <title>解决MySQL出现 Waiting for table metadata lock 问题</title>
      <link>http://zhaoguibin.me/posts/%E8%A7%A3%E5%86%B3mysql%E5%87%BA%E7%8E%B0-waiting-for-table-metadata-lock-%E9%97%AE%E9%A2%98/</link>
      <pubDate>Sat, 30 Jun 2018 12:13:56 +0000</pubDate>
      <guid>http://zhaoguibin.me/posts/%E8%A7%A3%E5%86%B3mysql%E5%87%BA%E7%8E%B0-waiting-for-table-metadata-lock-%E9%97%AE%E9%A2%98/</guid>
      <description>&lt;p&gt;前几天修改数据库表，结果数据库就卡死了，通过命令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-mysql&#34; data-lang=&#34;mysql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;show&lt;/span&gt; processlist
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;发现 Waiting for table metadata lock状态的连接，幸好这个状态的连接不多，kill掉这些连接就可以了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>mysql添加索引命令</title>
      <link>http://zhaoguibin.me/posts/mysql%E6%B7%BB%E5%8A%A0%E7%B4%A2%E5%BC%95%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Sat, 20 Jan 2018 14:45:13 +0000</pubDate>
      <guid>http://zhaoguibin.me/posts/mysql%E6%B7%BB%E5%8A%A0%E7%B4%A2%E5%BC%95%E5%91%BD%E4%BB%A4/</guid>
      <description>1.PRIMARY KEY（主键索引） mysql&amp;gt;ALTER TABLE `table_name` ADD PRIMARY KEY (`column`) 2.UNIQUE(唯一索引) mysql&amp;gt;ALTER TABLE `table_name` ADD UNIQUE (`column` ) 3.INDEX(普通索引) mysql&amp;gt;ALTER TABLE `table_name` ADD INDEX index_name (`column`) 4.FULLTEXT(全文索引) mysql&amp;gt;ALTER TABLE `table_name` ADD FULLTEXT (`column`) 5.多列索引 mysql&amp;gt;ALTER TABLE `table_name` ADD INDEX index_name (`column1`, `column2`, `column3`) </description>
    </item>
    <item>
      <title>mysql查询出的数据插入另一个表</title>
      <link>http://zhaoguibin.me/posts/mysql%E6%9F%A5%E8%AF%A2%E5%87%BA%E7%9A%84%E6%95%B0%E6%8D%AE%E6%8F%92%E5%85%A5%E5%8F%A6%E4%B8%80%E4%B8%AA%E8%A1%A8/</link>
      <pubDate>Sat, 20 Jan 2018 14:43:37 +0000</pubDate>
      <guid>http://zhaoguibin.me/posts/mysql%E6%9F%A5%E8%AF%A2%E5%87%BA%E7%9A%84%E6%95%B0%E6%8D%AE%E6%8F%92%E5%85%A5%E5%8F%A6%E4%B8%80%E4%B8%AA%E8%A1%A8/</guid>
      <description>1. INSERT INTO 表名1(字段列表1) SELECT 字段列表2 FROM 表名2 WHERE 条件表达式; 2. INSERT INTO 表名1(字段列表1) select * from (select 字段 from *) 临时表名 INSERT INTO 要插入数据的表 (字段1,字段2,....) SELECT * FROM (查询数据的sql语句) 临时表名 2-例子： INSERT INTO purchaseandsale_export (`name`) SELECT * FROM (SELECT name FROM `worker`) temp </description>
    </item>
    <item>
      <title>Mysqli statement execute error  Statement violates GTID consistency CREATE TABLE ...</title>
      <link>http://zhaoguibin.me/posts/mysqli-statement-execute-error-statement-violates-gtid-consistency-create-table-...-/</link>
      <pubDate>Sat, 20 Jan 2018 14:40:42 +0000</pubDate>
      <guid>http://zhaoguibin.me/posts/mysqli-statement-execute-error-statement-violates-gtid-consistency-create-table-...-/</guid>
      <description>解决：
在my.cnf 中将
gtid_mode = ON enforce_gtid_consistency = ON 改为
gtid_mode = OFFenforce_gtid_consistency = OFF 要两个参数一起改,然后重启mysql，问题解决</description>
    </item>
    <item>
      <title>Linux解决Warning mysql_connect() Headers and client library minor version mismatch. 警告</title>
      <link>http://zhaoguibin.me/posts/linux%E8%A7%A3%E5%86%B3warning-mysql_connect-headers-and-client-library-minor-version-mismatch.-%E8%AD%A6%E5%91%8A/</link>
      <pubDate>Sat, 16 Dec 2017 18:57:38 +0000</pubDate>
      <guid>http://zhaoguibin.me/posts/linux%E8%A7%A3%E5%86%B3warning-mysql_connect-headers-and-client-library-minor-version-mismatch.-%E8%AD%A6%E5%91%8A/</guid>
      <description>yum remove php-mysql yum install php70w-mysqlnd </description>
    </item>
    <item>
      <title>centos下彻底删除MYSQL 和重新安装MYSQL</title>
      <link>http://zhaoguibin.me/posts/centos%E4%B8%8B%E5%BD%BB%E5%BA%95%E5%88%A0%E9%99%A4mysql-%E5%92%8C%E9%87%8D%E6%96%B0%E5%AE%89%E8%A3%85mysql/</link>
      <pubDate>Sat, 16 Dec 2017 18:54:33 +0000</pubDate>
      <guid>http://zhaoguibin.me/posts/centos%E4%B8%8B%E5%BD%BB%E5%BA%95%E5%88%A0%E9%99%A4mysql-%E5%92%8C%E9%87%8D%E6%96%B0%E5%AE%89%E8%A3%85mysql/</guid>
      <description>1 删除Mysql
yum remove mysql mysql-server mysql-libs mysql-server; find / -name mysql 将找到的相关东西delete掉； rpm -qa|grep mysql(查询出来的东东yum remove掉) 2 安装Mysql
yum install mysql mysql-server mysql-libs mysql-server; </description>
    </item>
    <item>
      <title>ERROR 1044 (42000) Access denied for user &#39;&#39;@&#39;localhost&#39; to database &#39;mysql&#39;</title>
      <link>http://zhaoguibin.me/posts/error-1044-42000-access-denied-for-user-@localhost-to-database-mysql/</link>
      <pubDate>Sat, 16 Dec 2017 18:51:45 +0000</pubDate>
      <guid>http://zhaoguibin.me/posts/error-1044-42000-access-denied-for-user-@localhost-to-database-mysql/</guid>
      <description>方法一： 1.关闭mysql
service mysqld stop 2.屏蔽权限
mysqld_safe --skip-grant-table 屏幕出现： Starting demo from &amp;hellip;..
3.新开起一个终端输入
mysql -u root mysql mysql&amp;gt; UPDATE user SET Password=PASSWORD(&amp;#39;newpassword&amp;#39;) where USER=&amp;#39;root&amp;#39;; mysql&amp;gt; FLUSH PRIVILEGES;//记得要这句话，否则如果关闭先前的终端，又会出现原来的错误 mysql&amp;gt;exit; 方法二： 1.关闭mysql
service mysqld stop 2.屏蔽权限
mysqld_safe --skip-grant-table 屏幕出现： Starting demo from &amp;hellip;..
3.新开起一个终端输入
mysql -u root mysql mysql&amp;gt; delete from user where USER=&amp;#39;&amp;#39;; mysql&amp;gt; FLUSH PRIVILEGES;//记得要这句话，否则如果关闭先前的终端，又会出现原来的错误 mysql&amp;gt;exit; </description>
    </item>
    <item>
      <title>mysql更改数据库目录</title>
      <link>http://zhaoguibin.me/posts/mysql%E6%9B%B4%E6%94%B9%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9B%AE%E5%BD%95/</link>
      <pubDate>Sat, 16 Dec 2017 18:48:32 +0000</pubDate>
      <guid>http://zhaoguibin.me/posts/mysql%E6%9B%B4%E6%94%B9%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9B%AE%E5%BD%95/</guid>
      <description>修改 my.cnf
datadir=/www/mysql/data socket=/www/mysql/data/mysql.sock 其实这里不需要复制/var/lib/mysql下的文件到新目录，修改完配置之后，mysql会自动复制/var/lib/mysql下的文件到新目录
关闭SELinux
vim /etc/selinux/config #编辑文件 # This file controls the state of SELinux on the system. # SELINUX= can take one of these three values: # enforcing - SELinux security policy is enforced. #permissive - SELinux prints warnings instead of enforcing. #disabled - No SELinux policy is loaded. SELINUX=enforcing # SELINUXTYPE= can take one of these two values: # targeted - Targeted processes are protected, # mls - Multi Level Security protection.</description>
    </item>
    <item>
      <title>linux下php扩展mysqli的支持</title>
      <link>http://zhaoguibin.me/posts/linux%E4%B8%8Bphp%E6%89%A9%E5%B1%95mysqli%E7%9A%84%E6%94%AF%E6%8C%81/</link>
      <pubDate>Sun, 03 Dec 2017 17:49:50 +0000</pubDate>
      <guid>http://zhaoguibin.me/posts/linux%E4%B8%8Bphp%E6%89%A9%E5%B1%95mysqli%E7%9A%84%E6%94%AF%E6%8C%81/</guid>
      <description>mysqli是优化后的mysql，具体的优点baidu下就ok了
cd php-5.2.8 在这下面有个ext文件夹里有mysqli cd ext/mysqli linux下将源码文件编译应该都有configure吧，可这里没有，在我们已经安装php后，php5这个文件夹里的命令目录bin里有一个文件叫phpize，用它就可以生成configure文件啦，继续
/usr/local/php5/bin/phpize 这里回车运行，执行完后就出了configure文件，
./configure --prefix=/opt/local/mysqli --with-php-config=/opt/local/php/bin/php-config --with-mysqli=/opt/local/mysql/bin/mysql_config 直接回车，不出问题就继续。。 make make test make install (不出错就会显示Installing shared extensions: /usr/local/php5/lib/php/extensions/no-debug-non-zts-20041030/) 现在mysqli.so文件就出来啦。。
直接在php.ini里把这个文件加载就OK啦。。
extension_dir=”/usr/local/php5/ext” extension=mysqli.so 把上面第一行找到修改成这个,然后再把第二行加入。。wq保存退出。
把mysqli.so这个文件cp到/usr/local/php5/ext下
重启apache.</description>
    </item>
    <item>
      <title>在安装mysqli的时候，出现error-ext-mysqlnd-mysql-float-to-double-h-No-such-file-or-directory</title>
      <link>http://zhaoguibin.me/posts/%E5%9C%A8%E5%AE%89%E8%A3%85mysqli%E7%9A%84%E6%97%B6%E5%80%99%E5%87%BA%E7%8E%B0error-ext-mysqlnd-mysql-float-to-double-h-no-such-file-or-directory/</link>
      <pubDate>Sun, 03 Dec 2017 17:42:56 +0000</pubDate>
      <guid>http://zhaoguibin.me/posts/%E5%9C%A8%E5%AE%89%E8%A3%85mysqli%E7%9A%84%E6%97%B6%E5%80%99%E5%87%BA%E7%8E%B0error-ext-mysqlnd-mysql-float-to-double-h-no-such-file-or-directory/</guid>
      <description>直接修改源码，把找不到的那个头文件的路径修改为绝对路径，编译通过了，也能正常使用
pwd /home/neo/tools/php-5.5.28/ext/mysqli vim mysqli_api.c 把第36行的 #include &amp;#34;ext/mysqlnd/mysql_float_to_double.h&amp;#34; 修改为 #include &amp;#34;/home/neo/tools/php-5.5.28/ext/mysqlnd/mysql_float_to_double.h&amp;#34; </description>
    </item>
    <item>
      <title>迁移数据库：直接复制数据表文件到数据库</title>
      <link>http://zhaoguibin.me/posts/%E8%BF%81%E7%A7%BB%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9B%B4%E6%8E%A5%E5%A4%8D%E5%88%B6%E6%95%B0%E6%8D%AE%E8%A1%A8%E6%96%87%E4%BB%B6%E5%88%B0%E6%95%B0%E6%8D%AE%E5%BA%93/</link>
      <pubDate>Sun, 03 Dec 2017 17:35:55 +0000</pubDate>
      <guid>http://zhaoguibin.me/posts/%E8%BF%81%E7%A7%BB%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9B%B4%E6%8E%A5%E5%A4%8D%E5%88%B6%E6%95%B0%E6%8D%AE%E8%A1%A8%E6%96%87%E4%BB%B6%E5%88%B0%E6%95%B0%E6%8D%AE%E5%BA%93/</guid>
      <description>把目的数据库里面的 *.err 文件，ib_logfile 文件删除 备注：经测试，源mysql的安装目录及数据文件目录 可以与 目标Mysql的安装目录及数据文件目录 不一致。 此时，只需要拷贝所需移动的dbname及&amp;#39;mysql&amp;#39;和&amp;#39;ibdata1&amp;#39;，即可。 </description>
    </item>
    <item>
      <title>windows下用navicat远程链接虚拟机Linux下MySQL数据库</title>
      <link>http://zhaoguibin.me/posts/windows%E4%B8%8B%E7%94%A8navicat%E8%BF%9C%E7%A8%8B%E9%93%BE%E6%8E%A5%E8%99%9A%E6%8B%9F%E6%9C%BAlinux%E4%B8%8Bmysql%E6%95%B0%E6%8D%AE%E5%BA%93/</link>
      <pubDate>Sun, 03 Dec 2017 17:25:46 +0000</pubDate>
      <guid>http://zhaoguibin.me/posts/windows%E4%B8%8B%E7%94%A8navicat%E8%BF%9C%E7%A8%8B%E9%93%BE%E6%8E%A5%E8%99%9A%E6%8B%9F%E6%9C%BAlinux%E4%B8%8Bmysql%E6%95%B0%E6%8D%AE%E5%BA%93/</guid>
      <description>手动增加可以远程访问数据库的用户。
方法一、本地登入mysql，更改 “mysql” 数据库里的 “user” 表里的 “host” 项，将”localhost”改为”%”
mysql -u root -proot mysql&amp;gt;use mysql; mysql&amp;gt;update user set host = &amp;#39;%&amp;#39; where user = &amp;#39;root&amp;#39;; mysql&amp;gt;flush privileges; mysql&amp;gt;select host, user from user; 方法二、直接授权(推荐)
从任何主机上使用root用户，密码：youpassword（你的root密码）连接到mysql服务器：
mysql -u root -proot mysql&amp;gt;GRANT ALL PRIVILEGES ON *.* TO &amp;#39;root&amp;#39;@&amp;#39;%&amp;#39; IDENTIFIED BY &amp;#39;youpassword&amp;#39; WITH GRANT OPTION; mysql&amp;gt;flush privileges; </description>
    </item>
    <item>
      <title>PDO-MYSQL-make-pdo-mysql-lo-Error-1</title>
      <link>http://zhaoguibin.me/posts/pdo-mysql-make-pdo-mysql-lo-error-1/</link>
      <pubDate>Sun, 03 Dec 2017 17:13:16 +0000</pubDate>
      <guid>http://zhaoguibin.me/posts/pdo-mysql-make-pdo-mysql-lo-error-1/</guid>
      <description>编译安装PDO_MYSQL拓展模块，总是提示
In file included from /data0/software/PDO_MYSQL-1.0.2/pdo_mysql.c:31: /data0/software/PDO_MYSQL-1.0.2/php_pdo_mysql_int.h:25:19: error: mysql.h: No such file or directory In file included from /data0/software/PDO_MYSQL-1.0.2/pdo_mysql.c:31: /data0/software/PDO_MYSQL-1.0.2/php_pdo_mysql_int.h:36: error: expected specifier-qualifier-list before ‘MYSQL’ /data0/software/PDO_MYSQL-1.0.2/php_pdo_mysql_int.h:48: error: expected specifier-qualifier-list before ‘MYSQL_FIELD’ /data0/software/PDO_MYSQL-1.0.2/php_pdo_mysql_int.h:53: error: expected specifier-qualifier-list before ‘MYSQL_RES’ make: *** [pdo_mysql.lo] Error 1 这是因为这是因为在编译时需要 MySQL 的头的文件。而它按默认搜索找不到头文件的位置，所以才出现这个问题。通过软连接把MySQL头文件对应到/usr/local/include/下就好 比如你的MySQL安装文件位于/usr/local/mysql，那么就执行以下命令：
ln -s /usr/local/mysql/include/* /usr/local/include/ </description>
    </item>
    <item>
      <title>MySQL-ERROR-Table-mysql-user-doesn-t-exist</title>
      <link>http://zhaoguibin.me/posts/mysql-error-table-mysql-user-doesn-t-exist/</link>
      <pubDate>Sun, 03 Dec 2017 16:55:56 +0000</pubDate>
      <guid>http://zhaoguibin.me/posts/mysql-error-table-mysql-user-doesn-t-exist/</guid>
      <description>1、现象描述 [root@centos65 scripts]# service mysqld start Starting MySQL..The server quit without updating PID file (/var/lib/mysql/HKBO.pid).[FAILED] 查看错误日志
[root@centos65 scripts]# tail /var/log/mysqld.log InnoDB: Apply batch completed 2014-12-08 11:01:37 15721 [Note] InnoDB: 128 rollback segment(s) are active. 2014-12-08 11:01:37 15721 [Note] InnoDB: Waiting for purge to start 2014-12-08 11:01:37 15721 [Note] InnoDB: 5.6.12 started; log sequence number 1600607 2014-12-08 11:01:37 15721 [Note] Server hostname (bind-address): &amp;#39;*&amp;#39;; port: 3306 2014-12-08 11:01:37 15721 [Note] IPv6 is available.</description>
    </item>
    <item>
      <title>Mysql双主同步</title>
      <link>http://zhaoguibin.me/posts/mysql%E5%8F%8C%E4%B8%BB%E5%90%8C%E6%AD%A5/</link>
      <pubDate>Sat, 02 Dec 2017 15:12:36 +0000</pubDate>
      <guid>http://zhaoguibin.me/posts/mysql%E5%8F%8C%E4%B8%BB%E5%90%8C%E6%AD%A5/</guid>
      <description>平台：centos7,mysql5.6.34
解决数据库瓶颈问题 两台服务器可以同时读写数据库 A B两台服务器 A和B需要拥有一个同名的数据库 同步账号设置 首先要在两台服务器上各新增加一个可登陆的账号。
A端50
mysql&amp;gt;grant replication slave,file on *.* to &amp;#39;sync_user&amp;#39;@&amp;#39;192.168.10.58&amp;#39; identified by &amp;#39;123456&amp;#39;; B端58
mysql&amp;gt;grant replication slave,file on *.* to &amp;#39;sync_user&amp;#39;@&amp;#39;192.168.10.50&amp;#39; identified by &amp;#39;123456&amp;#39;; 修改my.cnf主配置文件
vim /etc/my.cnf 在 [mysqld] 添加
[mysqld] A端 log-bin=mysql-bin #启动二进制日志系统 server-id=1 #本机数据库ID标示为主，另一为2 binlog-do-db=test #二进制需同步的数据库名 binlog-ignore-db=mysql #避免同步用户数据库配置 replicate-do-db=test #同步数据库的名称 replicate-ignore-db=mysql #屏蔽对mysql数据库的同步 log-slave-updates slave-skip-errors=all sync_binlog=1 auto_increment_increment=2 auto_increment_offset=1 #B端配置2 B端 log-bin=mysql-bin #启动二进制日志系统 server-id=2 #本机数据库ID标示为主，另一为1 binlog-do-db=test #二进制需同步的数据库名 binlog-ignore-db=mysql #避免同步用户数据库配置 replicate-do-db=test #同步数据库的名称 replicate-ignore-db=mysql #屏蔽对mysql数据库的同步 log-slave-updates slave-skip-errors=all sync_binlog=1 auto_increment_increment=2 auto_increment_offset=2 #A端配置1 mysql -u root -p mysql&amp;gt;flush tables with read lock; #锁定表格 service mysqld restart mysql&amp;gt;show master status\G ＃查看主服务器同步状态 A端是这样的</description>
    </item>
    <item>
      <title>MySQL使用Symbolic-Links以支持数据分区存储</title>
      <link>http://zhaoguibin.me/posts/mysql%E4%BD%BF%E7%94%A8symbolic-links%E4%BB%A5%E6%94%AF%E6%8C%81%E6%95%B0%E6%8D%AE%E5%88%86%E5%8C%BA%E5%AD%98%E5%82%A8/</link>
      <pubDate>Sat, 02 Dec 2017 15:09:45 +0000</pubDate>
      <guid>http://zhaoguibin.me/posts/mysql%E4%BD%BF%E7%94%A8symbolic-links%E4%BB%A5%E6%94%AF%E6%8C%81%E6%95%B0%E6%8D%AE%E5%88%86%E5%8C%BA%E5%AD%98%E5%82%A8/</guid>
      <description>MySQL数据库及表(仅MyISAM)支持符号链接(symbolic link)，即数据库或表可以存储在my.cnf中指定datadir之外的分区或目录。 要支持符号链接，需要在配置中设置symbolic-links=1(较新的版本为默认开启)
假设my.cnf有设置data目录:
datadir=/data1/mysql/data/ 而在另一个分区目录下保存有数据数据库TestDB:
/data2/mysql/data/TestDB 那么可以这样使得同一个MySQL实例能同时管理TestDB:
ln -s /data2/mysql/data/TestDB /data1/mysql/data/ 所有文件相关权限设置正确后，MySQL就可以管理TestDB了。 值得注意的是，TestDB最好只能为一个MySQL服务来操作，否则会出现意想不到的问题。使用symbolic link的一个好处是当一个磁盘或分区空间不够时，可以将数据存储到其他的磁盘或分区。</description>
    </item>
    <item>
      <title>mysql-日志文件mysql-bin文件清除方法</title>
      <link>http://zhaoguibin.me/posts/mysql-%E6%97%A5%E5%BF%97%E6%96%87%E4%BB%B6mysql-bin%E6%96%87%E4%BB%B6%E6%B8%85%E9%99%A4%E6%96%B9%E6%B3%95/</link>
      <pubDate>Sat, 02 Dec 2017 14:35:37 +0000</pubDate>
      <guid>http://zhaoguibin.me/posts/mysql-%E6%97%A5%E5%BF%97%E6%96%87%E4%BB%B6mysql-bin%E6%96%87%E4%BB%B6%E6%B8%85%E9%99%A4%E6%96%B9%E6%B3%95/</guid>
      <description>默认情况下mysql会一直保留mysql-bin文件，这样到一定时候，磁盘可能会被撑满，这时候是否可以删除这些文件呢，是否可以安全删除，是个问题。
首先要说明一下，这些文件都是mysql的日志文件，如果不做主从复制的话，基本上是没用的，虽然没用，但是不建议使用rm命令删除，这样有可能会不安全，正确的方法是通过mysql的命令去删除。
mysql -u root -p Enter password:Welcome to the MySQL monitor.Commandsendwith;or \g.YourMySQL connection id is2819416Server version:5.5.24-0ubuntu0.12.04.1-log (Ubuntu)Copyright(c)2000,2011,Oracleand/or its affiliates.All rights reserved.Oracleis a registered trademark of OracleCorporationand/or its affiliates.Other names may be trademarks of their respective owners.Type&amp;#39;help;&amp;#39;or&amp;#39;\h&amp;#39;for help.Type&amp;#39;\c&amp;#39; to clear the current input statement. mysql&amp;gt; reset master;Query OK,0 rows affected (3 min 37.65 sec) 其实关键的命令就是reset master;这个命令会清空mysql-bin文件。
另外如果你的mysql服务器不需要做主从复制的话，建议通过修改my.cnf文件，来设置不生成这些文件，只要删除my.cnf中的下面一行就可以了。
log-bin=mysql-bin 如果你需要复制，最好控制一下这些日志文件保留的天数，可以通过下面的配置设定日志文件保留的天数：
expire_logs_days =7 表示保留7天的日志，这样老日志会自动被清理掉。</description>
    </item>
    <item>
      <title>centos7下使用yum安装mysql数据库</title>
      <link>http://zhaoguibin.me/posts/centos7%E4%B8%8B%E4%BD%BF%E7%94%A8yum%E5%AE%89%E8%A3%85mysql%E6%95%B0%E6%8D%AE%E5%BA%93/</link>
      <pubDate>Sat, 02 Dec 2017 12:24:47 +0000</pubDate>
      <guid>http://zhaoguibin.me/posts/centos7%E4%B8%8B%E4%BD%BF%E7%94%A8yum%E5%AE%89%E8%A3%85mysql%E6%95%B0%E6%8D%AE%E5%BA%93/</guid>
      <description>CentOS7的yum源中默认好像是没有mysql的。为了解决这个问题，我们要先下载mysql的repo源。
1 . 下载mysql的repo源
wget http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm 2 . 安装mysql-community-release-el7-5.noarch.rpm包
sudo rpm -ivh mysql-community-release-el7-5.noarch.rpm 安装这个包后，会获得两个mysql的yum repo源：/etc/yum.repos.d/mysql-community.repo，/etc/yum.repos.d/mysql-community-source.repo。
3 . 安装mysql
sudo yum install mysql-server 根据步骤安装就可以了，不过安装完成后，没有密码，需要重置密码。
4 . 重置密码
重置密码前，首先要登录
mysql -u root 登录时有可能报这样的错：ERROR 2002 (HY000): Can’t connect to local MySQL server through socket ‘/var/lib/mysql/mysql.sock’ (2)，原因是/var/lib/mysql的访问权限问题。下面的命令把/var/lib/mysql的拥有者改为当前用户：
sudo chown -R root:root /var/lib/mysql 然后，重启服务：
service mysqld restart 接下来登录重置密码：
mysql -u root mysql &amp;gt; use mysql; mysql &amp;gt; update user set password=password(&amp;#39;123456&amp;#39;) where user=&amp;#39;root&amp;#39;; mysql &amp;gt; exit; </description>
    </item>
    <item>
      <title>主从复制时报错：ERROR-1794-HY000-Slave……</title>
      <link>http://zhaoguibin.me/posts/%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E6%97%B6%E6%8A%A5%E9%94%99error-1794-hy000-slave/</link>
      <pubDate>Sat, 02 Dec 2017 12:22:19 +0000</pubDate>
      <guid>http://zhaoguibin.me/posts/%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E6%97%B6%E6%8A%A5%E9%94%99error-1794-hy000-slave/</guid>
      <description>centos 6.5
mysql5.7
在从库作stop slave时报：
error: ERROR 1794 (HY000): Slave is not configured or failed to initialize properly. You must at least set --server-id to enable either a master or a slave. Additional error messages can be found in the MySQL error log. 经分析，需要：
删除5张表，并重新导入脚本
use mysql drop table slave_master_info; drop table slave_relay_log_info; drop table slave_worker_info; drop table innodb_index_stats; drop table innodb_table_stats; source /usr/coolpad/mysql/share/mysql_system_tables.sql (2)重新启动数据库
注：这一步是必须的，否则无法正常配置双主架构。</description>
    </item>
    <item>
      <title>mysql实现主从复制</title>
      <link>http://zhaoguibin.me/posts/mysql%E5%AE%9E%E7%8E%B0%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/</link>
      <pubDate>Sat, 02 Dec 2017 11:12:18 +0000</pubDate>
      <guid>http://zhaoguibin.me/posts/mysql%E5%AE%9E%E7%8E%B0%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/</guid>
      <description>准备工作：
1.两个虚拟机：我这里用的是CentOS5.5，IP地址分别是192.168.1.101 和192.168.1.105；
101做主服务器，105做从服务器（都已经安装相同版本的Mysql）；
2.本机环境：Nginx+PHP+MySQL
好了，现在开始吧，来看看这听起来高大上的主从复制是怎么回事。
原理：mysql要做到主从复制，其实依靠的是二进制日志，即：假设主服务器叫A，从服务器叫B；主从复制就是
B跟着A学，A做什么，B就做什么。那么B怎么同步A的动作呢？现在A有一个日志功能，把自己所做的增删改查的动作
全都记录在日志中，B只需要拿到这份日志，照着日志上面的动作施加到自己身上就可以了。这样就实现了主从复制。
扩展：MYSQL还有一种日志叫做：慢日志
可以设置一个时间，那么所有执行时间超过这个时间的SQL都会被记录下来。这样就可以通过慢日志快速的找到网站中SQL的瓶颈来进行优化。
实现步骤：
1.首先修改mysql的配置文件，使其支持二进制日志功能。
打开主服务器的mysql配置文件：my.conf
vim /etc/my.cnf 加入如下三行代码：
参数解释： log-bin=mysql-bin //将mysql二进制日志取名为mysql-bin
binlog_format=mixed //二进制日志的格式，有三种：statement/row/mixed,具体分别不多做解释，这里使用mixed
server-id=101 //为服务器设置一个独一无二的id便于区分，这里使用ip地址的最后一位充当server-id
配置完成，:wq 保存，重启mysql
重启mysql命令：# service mysqld restart
同样的，进入从服务器，配置从服务器的my.cnf,重复步骤1即可，
唯一的区别是，server-id要改成从服务器的ip尾位，即server-id=105;其他两项是一样的，保存，并重启mySQL；
2.在主服务器上为从服务器分配一个账号，就像一把钥匙，从服务器拿着这个钥匙，才能到主服务器上来共享主服务器的日志文件。
进入主服务器的mysql界面，
mysql -u root -p 111111 //我这里mysql账号是root，密码是111111 在mysql操作界面下，输入下面一行命令：
GRANT replication slave ON *.* TO &amp;#39;slave&amp;#39;@&amp;#39;%&amp;#39; IDENTIFIED BY &amp;#39;111111&amp;#39;; 3.查看主服务器BIN日志的信息（执行完之后记录下这两值，然后在配置完从服务器之前不要对主服务器进行任何操作，因为每次操作数据库时这两值会发生改变）.
4.设置从服务器
进入从服务器mysql
mysql -u root -p111111 关闭slave（如果你以前配置过主从的话，一定要先关闭）
stop slave; 开始配置：
输入下面代码即可：
参数解释：
MASTER_HOST : 设置要连接的主服务器的ip地址
MASTER_USER : 设置要连接的主服务器的用户名</description>
    </item>
  </channel>
</rss>
